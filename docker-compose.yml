version: '3.9'
#################### NETWORKS ####################
networks:
  mongoDB_net:
    name: "mongoDB_net"
  frontend_net:
    name: "frontend_net"
  backend_net:
    name: " backend_net"
  ai_net:
    name: "ai_net"

#################### SERVICES ####################
services:

#################### DATABASE ####################
  # mongoDB:
  #   container_name: mongoDB
  #   image: mongo:latest
  #   networks:
  #     - mongoDB_net
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: AlcheMix2023
  #   volumes:
  #     - ./Volumes\Database:/data/db
  #   restart: always

  # mongoExpress:
  #   container_name: mongoExpress
  #   image: mongo-express
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - mongoDB_net
  #   links:
  #     - mongoDB
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: AlcheMix2023
  #     ME_CONFIG_MONGODB_URL: mongodb://root:AlcheMix2023@mongoDB:27017/
  #   depends_on:
  #     mongoDB:
  #       condition: service_started
  #   restart: always

#################### BACKEND ####################
  nodejs.app:
    container_name: nodeJsApp
    build:
      context: .
      dockerfile: ./App_Backend/DockerFile
    env_file: .env
    ports:
      - "8082:8082"
    networks:
      - backend_net
      - frontend_net
      - ai_net
    # depends_on:
    #   - mongoDB
    #   - mongoExpress
    # restart: unless-stopped

#################### FRONTEND ####################
  reactjs.app:
    container_name: reactJsApp
    build:
      context: .
      dockerfile: ./App_Web/DockerFile
    ports:
      - "8083:80"
    networks:
      - frontend_net
    restart: unless-stopped

#################### AI MODEL ####################
  python_script:
    build:
      context: ./AI_Model
    command: python /app/mon_script.py
    networks:
      - ai_net
  
  spark-master:
    image: docker.io/bitnami/spark:3.3
    build:
      context: .
      dockerfile: ./AI_Model/Dockerfile_spark
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./AI_Model/src:/opt/spark-apps
      - ./AI_Model/src:/opt/spark-data
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
  
  spark-worker-a:
    image: docker.io/bitnami/spark:3.3
    ports:
      - "9091:8080"
      - "7000:7000"
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-a
    volumes:
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data

  spark-worker-b:
    image: docker.io/bitnami/spark:3.3
    ports:
      - "9092:8080"
      - "7001:7000"
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker-b
    volumes:
      - ./AI_Model/src:/opt/spark-apps
      - ./AI_Model/src:/opt/spark-data